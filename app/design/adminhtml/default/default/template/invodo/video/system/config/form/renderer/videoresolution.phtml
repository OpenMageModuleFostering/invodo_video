<?php
/**
 * NOTICE OF LICENSE
 *
 * Subject to the terms, conditions and limitations of this EULA,
 * Company hereby grants you a limited, nonexclusive, nontransferable,
 * non-assignable license, without rights to sublicense, to install or have installed,
 * display and use the Software (in object code only) only on the computers
 * to which the Software is downloaded.  The terms and conditions of this EULA
 * will govern any upgrades, updates, patches, hotfixes and/or
 * additional versions of the Software provided by Company, at Company’s sole
 * discretion, that replace and/or supplement the original Software (collectively, “Update”),
 * unless such Update is accompanied by or references a separate license
 * agreement in which case the terms and conditions of that agreement will
 * govern.  If this EULA governs your use of an Update, such Update shall be
 * considered Software for purposes of this EULA. Unless earlier terminated
 * as provided herein, the term of each individual license granted under this
 * EULA begins on the date of acceptance of this EULA and shall terminate only
 * as otherwise set forth herein.Each party recognizes that
 * Company grants no licenses except for the license expressly set forth.
 *
 * @category    Invodo
 * @package     Invodo_Video
 * @copyright   Copyright (c) 2013 INVODO (http://www.invodo.com/)
 * @license     http://opensource.org/licenses/OSL-3.0 Open Source Software
 */
?>
<?php
/** @var Invodo_Video_Block_Adminhtml_System_Config_Form_Field_Videoresolution $_element */
$_element   = $this->getElement();
$_disabled  = $_element->getDisabled();
$_width     = $this->getWidth();
$_height    = $this->getHeight();
?>

<input type="hidden" id="<?php echo $_element->getHtmlId(); ?>" name="<?php echo trim($_element->getName()) ?>" value="<?php echo trim($_element->getValue()); ?>">
<?php if ($_disabled): ?>
<input type="hidden" id="invodo_video_config_width_inherit" checked="checked">
<input type="hidden" id="invodo_video_config_height_inherit" checked="checked">
<?php endif; ?>
<div>
    <div style="width: 50px; float: left">
        <input type="text" id="invodo_video_config_width" value="<?php echo $_width; ?>" style="width: 45px" class="required-entry validate-digits validate-digits-range digits-range-100-2000" <?php if ($_disabled): ?>disabled<?php endif; ?>>
        <span><?php echo $this->helper('invodo_video')->__('Width'); ?></span>
    </div>
    <div style="float: left;">&nbsp;x&nbsp;</div>
    <div style="width: 50px; float: left; margin-right: 10px">
        <input type="text" id="invodo_video_config_height" style="width: 45px" value="<?php echo $_height; ?>" class="required-entry validate-digits validate-digits-range digits-range-100-2000" <?php if ($_disabled): ?>disabled<?php endif; ?>>
        <span><?php echo $this->helper('invodo_video')->__('Height'); ?></span>
    </div>
    <div><?php echo $this->helper('invodo_video')->__('Note: match your container size to the aspect ratio of your video'); ?></div>
</div>
<script type="text/javascript">
    //<![CDATA[
    (function() {
        $('invodo_video_config_width').observe('change', function() {
            var width = parseInt(this.value);
            var height = width ? parseInt(width / 16 * 9) : 0;
            $('invodo_video_config_height').value = height;
            $('<?php echo $_element->getHtmlId(); ?>').value = width + 'x' + height;
        });

        $('invodo_video_config_height').observe('change', function() {
            var height = parseInt(this.value);
            var width = $('invodo_video_config_width').value;
            $('<?php echo $_element->getHtmlId(); ?>').value = width + 'x' + height;
        });
    })();
    //]]>
</script>
